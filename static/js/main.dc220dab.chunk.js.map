{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","Input.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","query","filteredMovieList","filter","movie","toLowerCase","includes","map","key","imdbId","Input","queryChange","debounceTimeout","value","onChange","type","id","placeholder","App","state","handleChangeQuery","e","setState","target","this","htmlFor","moviesFromServer","Component","ReactDOM","render","document","getElementById"],"mappings":"oUAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,0BACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC7BC,EAAoBF,EACvBG,QAAO,SAAAC,GAAK,OAAKA,EAAMd,MAAQc,EAAMb,aACnCc,cAAcC,SAASL,EAAMI,kBAElC,OACE,yBAAKX,UAAU,UACZQ,EAAkBK,KAAI,SAAAH,GAAK,OAC1B,kBAAC,EAAD,eAAWI,IAAKJ,EAAMK,QAAYL,SAkB1CL,EAAWD,aAAe,CACxBE,OAAQ,GACRC,MAAO,I,WCXMS,EAnBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaV,EAAhB,EAAgBA,MAAhB,OACZ,yBAAKP,UAAU,WACb,kBAAC,gBAAD,CACEkB,gBAAiB,IACjBC,MAAOZ,EACPa,SAAUH,EACVI,KAAK,SACLC,GAAG,eACHtB,UAAU,QACVuB,YAAY,uB,OCPLC,EAAb,2MACEC,MAAQ,CACNlB,MAAO,IAFX,EAKEmB,kBAAmB,SAACC,GAClB,EAAKC,SAAS,CACZrB,MAAOoB,EAAEE,OAAOV,SAPtB,wEAWY,IACAZ,EAAUuB,KAAKL,MAAflB,MAER,OACE,yBAAKP,UAAU,QACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAO+B,QAAQ,eAAe/B,UAAU,SAAxC,gBAGA,kBAAC,EAAD,CAAOO,MAAOA,EAAOU,YAAaa,KAAKJ,sBAG3C,kBAAC,EAAD,CAAYpB,OAAQ0B,EAAkBzB,MAAOA,KAE/C,yBAAKP,UAAU,WAAf,0BA3BR,GAAyBiC,aCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.dc220dab.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"./images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies, query }) => {\n  const filteredMovieList = movies\n    .filter(movie => (movie.title + movie.description)\n      .toLowerCase().includes(query.toLowerCase()));\n\n  return (\n    <div className=\"movies\">\n      {filteredMovieList.map(movie => (\n        <MovieCard key={movie.imdbId} {...movie} />\n      ))}\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n  query: PropTypes.string,\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n  query: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DebounceInput } from 'react-debounce-input';\n\nconst Input = ({ queryChange, query }) => (\n  <div className=\"control\">\n    <DebounceInput\n      debounceTimeout={1000}\n      value={query}\n      onChange={queryChange}\n      type=\"search\"\n      id=\"search-query\"\n      className=\"input\"\n      placeholder=\"Type search word\"\n    />\n  </div>\n);\n\nInput.propTypes = {\n  queryChange: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport Input from './Input';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChangeQuery =(e) => {\n    this.setState({\n      query: e.target.value,\n    });\n  }\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <div className=\"box\">\n            <div className=\"field\">\n              <label htmlFor=\"search-query\" className=\"label\">\n                Search movie\n              </label>\n              <Input query={query} queryChange={this.handleChangeQuery} />\n            </div>\n          </div>\n          <MoviesList movies={moviesFromServer} query={query} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}